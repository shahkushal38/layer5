{
    "componentChunkName": "component---src-templates-learn-chapter-js",
    "path": "/learn-ng/mastering-meshery-istio/introduction-to-service-meshes/linkerd/dashboard/",
    "result": {"data":{"chapter":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"chapterTitle\": \"Linkerd Dashboard\",\n  \"description\": \"Meshery is the service mesh managemen plane which offers lifecycle, configuration, and performance management of service meshes and their workloads.\",\n  \"videos\": 4,\n  \"lectures\": 12,\n  \"order\": 4\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Introduction to Linkerd Dashboard\"), mdx(\"p\", null, \"The Dashboard provides a clickable user interface for administration of Linkerd. The Dashboard provides measurements of success rate, requests/second and latency for services on the mesh. Run the Linkerd Dashboard, by executing:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"linkerd dashboard &\\n\")), mdx(\"p\", null, \"This command port-forwards from your local system to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"linkerd-web\"), \" service. You can also expose the dashboard using Kubernetes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ingress\"), \", which we will see later in this section.\"), mdx(\"p\", null, \"Since Linkerd's control plane components have the Linkerd proxy sidecarred, you can examine statistics of the traffic you are generating by looking at the dashboard. Execute:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"linkerd -n linkerd top deploy/linkerd-web\\n\")), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Exposing the dashboard\"), mdx(\"p\", null, \"Instead of using linkerd dashboard & every time you'd like to see what's going on, you can expose the dashboard via an ingress. We will use the Nginx ingress, which we had deployed and used in Lab 3.\"), mdx(\"p\", null, \"We will be applying Nginx ingress-traffic rule with basic authentication protocol\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"apiVersion: v1\\nkind: Secret\\ntype: Opaque\\nmetadata:\\n  name: web-ingress-auth\\n  namespace: linkerd\\ndata:\\n  auth: YWRtaW46JGFwcjEkbjdDdTZnSGwkRTQ3b2dmN0NPOE5SWWpFakJPa1dNLgoK\\n---\\napiVersion: extensions/v1beta1\\nkind: Ingress\\nmetadata:\\n  name: web-ingress\\n  namespace: linkerd\\n  annotations:\\n    kubernetes.io/ingress.class: \\\"nginx\\\"\\n    nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local:8084\\n    nginx.ingress.kubernetes.io/configuration-snippet: |\\n      proxy_set_header Origin \\\"\\\";\\n      proxy_hide_header l5d-remote-ip;\\n      proxy_hide_header l5d-server-id;\\n    nginx.ingress.kubernetes.io/auth-type: basic\\n    nginx.ingress.kubernetes.io/auth-secret: web-ingress-auth\\n    nginx.ingress.kubernetes.io/auth-realm: \\\"Authentication Required\\\"\\nspec:\\n  rules:\\n    - host: dashboard.example.com\\n      http:\\n        paths:\\n          - backend:\\n              serviceName: linkerd-web\\n              servicePort: 8084\\n\")), mdx(\"p\", null, \"This exposes the dashboard at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dashboard.example.com\"), \" and protects it with basic auth with credentials admin,admin.\"), mdx(\"p\", null, \"From here you may need to modify your resolv.conf to add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dashboard.example.com\"), \" to localhost or use an alternative approach in order to see the dashboard deployment. We will not cover this in the workshop.\"), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Tools exposed by dashboard\"), mdx(\"p\", null, \"Linkerd dashboard exposes various CLI tools which may come handy while you debug your application running on mesh.\"), mdx(\"p\", null, \"Mainly there are three tools which Linkerd exposes as an extension to it's CLI commands\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stat\")), mdx(\"p\", null, \"This will show the \\u201Cgolden\\u201D metrics for each deployment:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Success rates\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Request rates\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Latency distribution percentiles\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"top\")), mdx(\"p\", null, \"To get a real-time view of which paths are being called.\"), mdx(\"a\", {\n    href: Top\n  }, mdx(\"img\", {\n    src: Top,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tap\")), mdx(\"p\", null, \"Shows the stream of requests across a single pod, deployment, or even everything in the emojivoto namespace.\"), mdx(\"a\", {\n    href: Tap\n  }, mdx(\"img\", {\n    src: Tap,\n    width: \"100%\",\n    align: \"center\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Linkerd Dashboard","description":"Meshery is the service mesh managemen plane which offers lifecycle, configuration, and performance management of service meshes and their workloads."},"fields":{"slug":"learn-ng/mastering-meshery-istio/introduction-to-service-meshes/linkerd/dashboard/","course":"introduction-to-service-meshes","learnpath":"mastering-meshery-istio","chapter":"dashboard"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Introduction to Service Meshes - Hands On","meshesYouLearn":[{"imagepath":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/ed9cc838b59fc0d58827e662386104dd/e9fba/consul.png","srcSet":"/static/ed9cc838b59fc0d58827e662386104dd/86ee2/consul.png 13w,\n/static/ed9cc838b59fc0d58827e662386104dd/88208/consul.png 25w,\n/static/ed9cc838b59fc0d58827e662386104dd/e9fba/consul.png 50w,\n/static/ed9cc838b59fc0d58827e662386104dd/15e42/consul.png 100w","sizes":"(min-width: 50px) 50px, 100vw"},"sources":[{"srcSet":"/static/ed9cc838b59fc0d58827e662386104dd/68795/consul.webp 13w,\n/static/ed9cc838b59fc0d58827e662386104dd/2fa99/consul.webp 25w,\n/static/ed9cc838b59fc0d58827e662386104dd/dbc4a/consul.webp 50w,\n/static/ed9cc838b59fc0d58827e662386104dd/d8057/consul.webp 100w","type":"image/webp","sizes":"(min-width: 50px) 50px, 100vw"}]},"width":50,"height":50}},"extension":"png","publicURL":"/static/ed9cc838b59fc0d58827e662386104dd/consul.png"},"name":"Consul"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/b4f4020971de42f6fb2497075a67f325/linkerd.svg"},"name":"Linkerd"},{"imagepath":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/26a24c3a0d7e54143dd4aa4fd789188d/e9fba/osm.png","srcSet":"/static/26a24c3a0d7e54143dd4aa4fd789188d/86ee2/osm.png 13w,\n/static/26a24c3a0d7e54143dd4aa4fd789188d/88208/osm.png 25w,\n/static/26a24c3a0d7e54143dd4aa4fd789188d/e9fba/osm.png 50w,\n/static/26a24c3a0d7e54143dd4aa4fd789188d/15e42/osm.png 100w","sizes":"(min-width: 50px) 50px, 100vw"},"sources":[{"srcSet":"/static/26a24c3a0d7e54143dd4aa4fd789188d/68795/osm.webp 13w,\n/static/26a24c3a0d7e54143dd4aa4fd789188d/2fa99/osm.webp 25w,\n/static/26a24c3a0d7e54143dd4aa4fd789188d/dbc4a/osm.webp 50w,\n/static/26a24c3a0d7e54143dd4aa4fd789188d/d8057/osm.webp 100w","type":"image/webp","sizes":"(min-width: 50px) 50px, 100vw"}]},"width":50,"height":50}},"extension":"png","publicURL":"/static/26a24c3a0d7e54143dd4aa4fd789188d/osm.png"},"name":"Open Service Mesh"},{"imagepath":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/22e979e6d5c42861b34644476fc263ce/e9fba/envoy-icon-color.png","srcSet":"/static/22e979e6d5c42861b34644476fc263ce/86ee2/envoy-icon-color.png 13w,\n/static/22e979e6d5c42861b34644476fc263ce/88208/envoy-icon-color.png 25w,\n/static/22e979e6d5c42861b34644476fc263ce/e9fba/envoy-icon-color.png 50w,\n/static/22e979e6d5c42861b34644476fc263ce/15e42/envoy-icon-color.png 100w","sizes":"(min-width: 50px) 50px, 100vw"},"sources":[{"srcSet":"/static/22e979e6d5c42861b34644476fc263ce/68795/envoy-icon-color.webp 13w,\n/static/22e979e6d5c42861b34644476fc263ce/2fa99/envoy-icon-color.webp 25w,\n/static/22e979e6d5c42861b34644476fc263ce/dbc4a/envoy-icon-color.webp 50w,\n/static/22e979e6d5c42861b34644476fc263ce/d8057/envoy-icon-color.webp 100w","type":"image/webp","sizes":"(min-width: 50px) 50px, 100vw"}]},"width":50,"height":50}},"extension":"png","publicURL":"/static/22e979e6d5c42861b34644476fc263ce/envoy-icon-color.png"},"name":"Envoy"}]},"fields":{"slug":"learn-ng/mastering-meshery-istio/introduction-to-service-meshes/"}}]},"TOC":{"nodes":[{"frontmatter":{"order":7,"chapterTitle":"Circuit Breaking"},"fields":{"section":"istio","chapter":"circuit-breaking"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"istio","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Istio Ingress Gateway"},"fields":{"section":"istio","chapter":"expose-services"}},{"frontmatter":{"order":6,"chapterTitle":"Fault Injection"},"fields":{"section":"istio","chapter":"fault-injection"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"istio","chapter":"getting-started"}},{"frontmatter":{"order":7,"chapterTitle":"Mutual TLS & Identity Verification"},"fields":{"section":"istio","chapter":"mutual-tls"}},{"frontmatter":{"order":4,"chapterTitle":"Observability"},"fields":{"section":"istio","chapter":"observability"}},{"frontmatter":{"order":5,"chapterTitle":"Request Routing and Canary Testing"},"fields":{"section":"istio","chapter":"routing-and-canary"}},{"frontmatter":{"order":4,"chapterTitle":"Linkerd Dashboard"},"fields":{"section":"linkerd","chapter":"dashboard"}},{"frontmatter":{"order":5,"chapterTitle":"Debugging (Optional)"},"fields":{"section":"linkerd","chapter":"debugging"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"linkerd","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Linkerd Ingress"},"fields":{"section":"linkerd","chapter":"expose-services"}},{"frontmatter":{"order":8,"chapterTitle":"Fault Injection"},"fields":{"section":"linkerd","chapter":"fault-injection"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"linkerd","chapter":"getting-started"}},{"frontmatter":{"order":6,"chapterTitle":"Observability"},"fields":{"section":"linkerd","chapter":"observability"}},{"frontmatter":{"order":7,"chapterTitle":"Traffic Splitting using SMI and Linkerd"},"fields":{"section":"linkerd","chapter":"traffic-splitting"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}}]}},"pageContext":{"learnpath":"mastering-meshery-istio","slug":"learn-ng/mastering-meshery-istio/introduction-to-service-meshes/linkerd/dashboard/","course":"introduction-to-service-meshes","section":"linkerd","chapter":"dashboard","pageType":"chapter"}},
    "staticQueryHashes": ["4047814605","7929417"]}